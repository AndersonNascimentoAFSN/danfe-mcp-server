# ============================================
# Dockerfile Otimizado para Render
# DANFE Downloader MCP Server
# ============================================

FROM --platform=linux/amd64 node:20-bullseye

# Metadados
LABEL maintainer="Anderson Nascimento"
LABEL description="MCP DANFE Downloader Server para Render"
LABEL version="2.0.0"

# ============================================
# Instalar dependências do sistema
# ============================================

RUN apt-get update && apt-get install -y \
    # xvfb - X Virtual Framebuffer (display virtual)
    xvfb \
    # Playwright/Chromium dependencies
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libdbus-1-3 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libasound2 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libgtk-3-0 \
    # Fontes
    fonts-liberation \
    fonts-noto-color-emoji \
    # Utilitários
    ca-certificates \
    wget \
    libappindicator3-1 \
    libnss3-dev \
    libxss1 \
    && rm -rf /var/lib/apt/lists/*

# ============================================
# Criar diretório da aplicação
# ============================================

WORKDIR /app

# ============================================
# Instalar dependências Node.js
# ============================================

# Copiar apenas package files primeiro (melhor cache)
COPY package*.json ./

# Instalar TODAS as dependências (incluindo devDependencies para build)
RUN npm ci

# ============================================
# Configuração de usuário (segurança)
# ============================================

# Criar usuário não-root ANTES de instalar Playwright
RUN groupadd -r nodejs && useradd -r -g nodejs nodejs

# Criar diretório home e dar permissões
RUN mkdir -p /home/nodejs/.cache && \
    chown -R nodejs:nodejs /home/nodejs

# Instalar dependências do sistema como root primeiro
RUN npx playwright install-deps chromium

# Agora instalar apenas os browsers como user nodejs
USER nodejs
RUN npx playwright install chromium

# Verificar se instalou corretamente
RUN ls -la /home/nodejs/.cache/ms-playwright/ && \
    find /home/nodejs/.cache/ms-playwright -name "chrome" -type f && \
    echo "✅ Playwright instalado como user nodejs"

# Voltar para root para continuar build
USER root

# ============================================
# Copiar código fonte e build
# ============================================

COPY . .

# Dar permissão de execução ao script start
RUN chmod +x start.sh

# Compilar TypeScript  
RUN npm run build

# Remover devDependencies após build para reduzir tamanho da imagem
RUN npm prune --production

# Criar diretório de downloads
RUN mkdir -p downloads

# Ajustar permissões finais
RUN chown -R nodejs:nodejs /app

# Mudar para usuário não-root
USER nodejs

# ============================================
# Configurar variáveis de ambiente
# ============================================

# Display virtual do xvfb
ENV DISPLAY=:99

# Diretório dos browsers do Playwright (usar caminho padrão)
# ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright (removido - deixar Playwright usar padrão)

# Node.js em modo produção
ENV NODE_ENV=production

# ============================================
# Expor porta
# ============================================

# Render define PORT dinamicamente, mas vamos expor as portas mais comuns
EXPOSE 3000 10000 8080

# ============================================
# Health Check
# ============================================

# Health check otimizado para Render (port detection)
HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT:-10000}/health || exit 1

# ============================================
# Comando de inicialização
# ============================================

CMD ["/app/start.sh"]