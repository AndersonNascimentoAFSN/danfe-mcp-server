# ============================================
# Dockerfile Otimizado para Render
# DANFE Downloader MCP Server
# ============================================
# 
# Configura√ß√£o completa para:
# - Node.js 20 LTS
# - Playwright com Chromium
# - xvfb (display virtual para modo headless)
# - MCP Server com Fastify
#
# Plataforma: linux/amd64 (requisito Render)
# ============================================

FROM --platform=linux/amd64 node:20-bullseye

# Metadados
LABEL maintainer="Anderson Nascimento"
LABEL description="MCP DANFE Downloader Server para Render"
LABEL version="1.0.0"

# ============================================
# Instalar depend√™ncias do sistema
# ============================================

RUN apt-get update && apt-get install -y \
    # xvfb - X Virtual Framebuffer (display virtual)
    xvfb \
    # Playwright/Chromium dependencies
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libdbus-1-3 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libasound2 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libgtk-3-0 \
    # Fontes
    fonts-liberation \
    fonts-noto-color-emoji \
    # Utilit√°rios
    ca-certificates \
    wget \
    libappindicator3-1 \
    libnss3-dev \
    libxss1 \
    && rm -rf /var/lib/apt/lists/*

# ============================================
# Configurar usu√°rio (Render roda como root, mas √© boa pr√°tica)
# ============================================

# Criar diret√≥rio da aplica√ß√£o
WORKDIR /app

# ============================================
# Instalar depend√™ncias Node.js
# ============================================

# Copiar apenas package files primeiro (melhor cache)
COPY package*.json ./

# Instalar depend√™ncias de produ√ß√£o
RUN npm ci --only=production

# Instalar Playwright Chromium
RUN npx playwright install chromium --with-deps

# ============================================
# Copiar c√≥digo fonte e build
# ============================================

COPY . .

# Compilar TypeScript
RUN npm run build

# Criar diret√≥rio de downloads
RUN mkdir -p downloads

# ============================================
# Configurar vari√°veis de ambiente
# ============================================

# Display virtual do xvfb
ENV DISPLAY=:99

# Diret√≥rio dos browsers do Playwright
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright

# Node.js em modo produ√ß√£o
ENV NODE_ENV=production

# ============================================
# Expor porta
# ============================================

# Render define PORT via vari√°vel de ambiente (geralmente 10000)
# Mas configuramos para usar 3000 por padr√£o
EXPOSE 3000

# ============================================
# Script de inicializa√ß√£o
# ============================================

# Criar script que inicia xvfb e depois o servidor
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"\n\
echo "‚ïë     üöÄ DANFE Downloader MCP Server - Render Deploy       ‚ïë"\n\
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"\n\
echo ""\n\
echo "üñ•Ô∏è  Iniciando xvfb (display virtual)..."\n\
Xvfb :99 -screen 0 1920x1080x24 -ac -nolisten tcp -dpi 96 +extension RANDR > /dev/null 2>&1 &\n\
XVFB_PID=$!\n\
echo "‚úÖ xvfb iniciado (PID: $XVFB_PID, Display: :99)"\n\
echo ""\n\
\n\
# Aguardar xvfb estar pronto\n\
sleep 2\n\
\n\
# Verificar se DISPLAY est√° dispon√≠vel\n\
if [ -n "$DISPLAY" ]; then\n\
    echo "‚úÖ Display configurado: $DISPLAY"\n\
else\n\
    echo "‚ö†Ô∏è  DISPLAY n√£o configurado, definindo para :99"\n\
    export DISPLAY=:99\n\
fi\n\
\n\
echo ""\n\
echo "üåê Iniciando servidor MCP na porta ${PORT:-3000}..."\n\
echo ""\n\
\n\
# Iniciar servidor Node.js\n\
exec node dist/index.js\n\
' > /app/start.sh && chmod +x /app/start.sh

# ============================================
# Health Check
# ============================================

# Render verifica se a porta est√° respondendo
# Adicionamos health check interno tamb√©m
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT:-3000}/health || exit 1

# ============================================
# Comando de inicializa√ß√£o
# ============================================

CMD ["/app/start.sh"]
