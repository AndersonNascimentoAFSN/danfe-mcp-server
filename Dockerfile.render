# ============================================
# Dockerfile Otimizado para Render
# DANFE Downloader MCP Server
# ============================================
# 
# Configuração completa para:
# - Node.js 20 LTS
# - Playwright com Chromium
# - xvfb (display virtual para modo headless)
# - MCP Server com Fastify
#
# Plataforma: linux/amd64 (requisito Render)
# ============================================

FROM --platform=linux/amd64 node:20-bullseye

# Metadados
LABEL maintainer="Anderson Nascimento"
LABEL description="MCP DANFE Downloader Server para Render"
LABEL version="1.0.0"

# ============================================
# Instalar dependências do sistema
# ============================================

RUN apt-get update && apt-get install -y \
    # xvfb - X Virtual Framebuffer (display virtual)
    xvfb \
    # Playwright/Chromium dependencies
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libdbus-1-3 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libasound2 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libgtk-3-0 \
    # Fontes
    fonts-liberation \
    fonts-noto-color-emoji \
    # Utilitários
    ca-certificates \
    wget \
    libappindicator3-1 \
    libnss3-dev \
    libxss1 \
    && rm -rf /var/lib/apt/lists/*

# ============================================
# Configurar usuário (Render roda como root, mas é boa prática)
# ============================================

# Criar diretório da aplicação
WORKDIR /app

# ============================================
# Instalar dependências Node.js
# ============================================

# Copiar apenas package files primeiro (melhor cache)
COPY package*.json ./

# Instalar TODAS as dependências (incluindo devDependencies para build)
RUN npm ci

# Instalar Playwright Chromium
RUN npx playwright install chromium --with-deps

# ============================================
# Copiar código fonte e build
# ============================================

COPY . .

# Dar permissão de execução ao script start
RUN chmod +x start.sh

# Compilar TypeScript  
RUN npm run build

# Remover devDependencies após build para reduzir tamanho da imagem
RUN npm prune --production

# Criar diretório de downloads
RUN mkdir -p downloads

# ============================================
# Configurar variáveis de ambiente
# ============================================

# Display virtual do xvfb
ENV DISPLAY=:99

# Diretório dos browsers do Playwright
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright

# Node.js em modo produção
ENV NODE_ENV=production

# ============================================
# Expor porta
# ============================================

# Render define PORT dinamicamente, mas vamos expor as portas mais comuns
# para garantir que funcione independentemente da configuração
EXPOSE 3000 10000 8080

# ============================================
# Script de inicialização já copiado e com permissões
# ============================================

# ============================================
# Health Check
# ============================================

# Health check otimizado para Render (port detection)
# Render usa port 10000 por padrão, mas pode variar
HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT:-10000}/health || exit 1

# ============================================
# Comando de inicialização
# ============================================

CMD ["/app/start.sh"]
